resources:
- repo: self
queue:
  name: Hosted VS2017
variables:
  PesterOutputFile: $(System.DefaultWorkingDirectory)/Test-Setup.xml
steps:

- task: PowerShell@1
  displayName: 'Ensure all scripts have tests'
  inputs:
    scriptType: filePath
    scriptName: '$(System.DefaultWorkingDirectory)/Build/Ensure-AllScriptsHaveTests.ps1'
    arguments: '-directory "$(System.DefaultWorkingDirectory)" -testignore "$(System.DefaultWorkingDirectory)/.testignore" -Verbose'

- task: PowerShell@1
  displayName: 'Install Pester 4.3.1'
  inputs:
    scriptType: filePath
    scriptName: '$(System.DefaultWorkingDirectory)/Build/Install-Pester.ps1'
    arguments: '-installationDirectory "$(System.DefaultWorkingDirectory)/Build"'

- task: PowerShell@1
  displayName: 'Run setup tests'
  inputs:
    scriptType: filePath
    scriptName: '$(System.DefaultWorkingDirectory)/Build/Run-SetupTests.ps1'
    arguments: '-setupScriptsFolder "$(System.DefaultWorkingDirectory)/Setup" -studioLicenseCode "$(StudioLicenseCode)" -outputFolder "$(System.DefaultWorkingDirectory)/Build" -pesterModulePath "$(System.DefaultWorkingDirectory)/Build/Pester/4.3.1/Pester.psm1"'

- task: PublishTestResults@2
  displayName: 'Publish test results'
  condition: succeededOrFailed()
  inputs:
    testRunner: NUnit
